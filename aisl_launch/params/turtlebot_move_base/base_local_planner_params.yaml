NavfnROS:
  # Specifies whether or not to allow navfn to create plans that traverse unknown space.
  # NOTE: If you are using a layered costmap_2d costmap with a voxel or obstacle layer,
  # you must also set the track_unknown_space param for that layer to be true,
  # or it will convert all your unknown space to free space (which navfn will then happily go right through).
  allow_unknown: false
  #default_tolerance: 0.2 # A tolerance on the goal point for the planner.


TrajectoryPlannerROS:
  # Robot configuration parameters
  max_vel_x: 0.10
  min_vel_x: 0.05

  max_vel_theta: 0.23
  min_vel_theta: -0.23
  max_rotational_vel: 0.23
  min_in_place_vel_theta: 0.15
  min_in_place_rotational_vel: 0.1
  acc_lim_theta: 1.5
  acc_lim_x: 1.5
  acc_lim_y: 1.5

  holonomic_robot: false

  # Goal tolerance parameters
  xy_goal_tolerance: 0.01
  yaw_goal_tolerance: 0.1

  # Forward simulation parameters
  sim_time: 2.0                   # The amount of time to forward-simulate trajectories in seconds.
  #sim_granularity: 0.025         # The step size, in meters, to take between points on a given trajectory
  #angular_sim_granularity: 0.025 # The step size, in radians, to take between angular samples on a given trajectory.
  vx_samples: 20                  # The number of samples to use when exploring the x velocity space.
  vtheta_samples: 20              # The number of samples to use when exploring the theta velocity space.

  # Trajectory Scoring Parameters
  #meter_scoring: false
  #pdist_scale: 0.6    # The weighting for how much the controller should stay close to the path it was given, maximal possible value is 5.0.
  #gdist_scale: 0.8     # The weighting for how much the controller should attempt to reach its local goal, also controls speed, maximal possible value is 5.0.
  #occdist_scale: 0.01  # The weighting for how much the controller should attempt to avoid obstacles.
  dwa: true

